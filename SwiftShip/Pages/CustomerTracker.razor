@page "/customertracker"

@using SwiftShip.BusinessLogic;
@using SwiftShip.BusinessLogic.Models;
@using SwiftShip.BusinessLogic.BusinessLogic;
@inject IParcelBusinessLogic _parcelBusinessLogic

<h3>CustomerTracker</h3>
<div class="d-flex py-2">
    <div class="my-style">
    <DxTextBox @bind-Text="SearchText" SizeMode="SizeMode.Medium" />
    </div>
    <DxButton Text="Apply" Click="Search" CssClass="mx-2" />
</div>
<div>
    <a class="nice-link">@errorText</a>
</div>

@if (SearchText != null && Data != null)
{
    <Tracker Data="Data" />
}

@code {
    string? SearchText { get; set; }
    private CustomerParcelModel? Data;

    private string errorText;

    private async Task Search()
    {
        if (Guid.TryParse(SearchText, out var guid))
        {
            errorText = string.Empty;
        }
        else
        {
            errorText = "The input is not valid";
            return;
        }
        var result = await _parcelBusinessLogic.GetAsync(guid);
        Data = result;
        StateHasChanged();
    }
}
